<meta name="viewport" content="width=device-width,initial-scale=1">
<head>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
	<script src="https://cdn.socket.io/socket.io-1.4.5.js"></script>
	<script src="https://use.fontawesome.com/d8b5485bc7.js"></script>
	<script type="text/javascript" src="/js/ja/ja-dict-controller.js"></script>

	<style type="text/css">
		body {
			background-color: #f2f2f2;
			padding: 0;
			margin: 0;
			margin-top: 20px;
			font-family: Sans-Serif;
			font-size: 24px;
		}

		label {
			font-family: Sans-Serif;
			font-size: 16px;
		}

		rt {
			pointer-events: none;
		}

		#options-button {
			margin-right: 24px;
			font-size: 32px;
		}

		.link-button{
			color: darkgray;
			cursor: pointer;
		}

		.link-button:hover{
			color: black;
		}

		.top-box {
			/*background-color: white; */
			/*position: fixed; */
			/*bottom: 0;*/
			/*left:0; */
			/*width: 90%;*/
			box-shadow: 0 10px 16px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
			padding: 8px 16px;
			/*display: block;*/
			/*background-color: #f2f2f2;*/
			/*vertical-align: bottom;*/
			/*display: inline-block;*/
			position: absolute;
			background-color: #f2f2f2;
			max-width: 600px;
			overflow: hidden;
			pointer-events: none;
			background-color: black;
			color:white;
		}

		.text-chunk {
			background-color: white;
			margin: 4px;
			padding: 8px 16px;
			/*border-radius: 8px;*/
			box-shadow: 0 10px 16px 0 rgba(0,0,0,0.2),0 6px 16px 0 rgba(0,0,0,0.19);
			vertical-align: bottom;
			/*display: flex;*/
			/*width: calc(100% - 32px);*/
			/*display: inline-block;*/
		}

		.translation-button {
			background-color: black;
			font-size: 1.5rem;
			color:white;
			display: inline-block;
			padding: 2px 6px;
			border-radius: 4px;
			cursor: pointer;
		}

		#container {
			padding: 8px;
		}

		@media screen and (max-width: 600px) {
		    body {
		        font-size: 1rem;
		    }

		    label {
				font-size: 1rem;
			}

			#options-button {
				font-size: 1rem;
			}

			#container {
				padding: 2px;
			}

			.top-box {
				font-size: 0.8rem;
			}

			.text-chunk {
				padding: 4px 8px;
			}

			.translation-button {
				font-size: .8rem;
			}
		}
	</style>

	<script type="text/javascript">
		window.langToolsConfig = window.langToolsConfig || {};

		var socket = io();

		var written = {};
		var textToFurigana = {};

		function escapeQuotes(text){
			console.log('in', text);
			console.log('out', text.replace(/"/g, "&quot;"));
			return text.replace(/"/g, "&quot;");
		}

		 window.mobileAndTabletcheck = function() {
			var check = false;
			(function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);
			return check;
		};

		socket.on('new-text', function(msg){
			console.log(msg);
			if(typeof msg == "string"){
				msg = escapeQuotes(msg);
				$("#output").append(`<div class='text-chunk' original="${msg}">${msg}</div>`);
			} else {
				msg.text = escapeQuotes(msg.text);
				let translation = "";
				if(msg.trans){
					translation = `<div style="text-align:right"><div class="translation-button" trans="${escapeQuotes(msg.trans)}">en</div></div>`;
				}
				$("#output").append($(`<div class='text-chunk' original="${msg.text}">${translation}<div class='content'>${msg.html}</div></div>`));
				textToFurigana[msg.text] = msg.html;
			}
			window.scrollTo(0,document.body.scrollHeight);
		});

		$(document).ready(() => {
			$("#output").append(`<div class='text-chunk'>Connecting...</div>`);


			const getWordForChild = (element) => {
				while(!$(element).hasClass('word')) element = element.parentNode;
				return element;
			}

			var getAllBetween = function (firstEl,lastEl) {
				firstEl = getWordForChild(firstEl);
				lastEl = getWordForChild(lastEl);

				console.log(firstEl, lastEl);

		        var firstElement = $(firstEl); // First Element
		        var lastElement = $(lastEl); // Last Element
		        var collection = new Array(); // Collection of Elements
		        collection.push(firstElement.attr('word')); // Add First Element to Collection
			        $(firstEl).nextAll().each(function(){ // Traverse all siblings
			            var siblingID  = $(this).attr('word'); // Get Sibling ID
			            if (siblingID != $(lastElement).attr('word')) { // If Sib is not LastElement
			                collection.push($(this).attr('word')); // Add Sibling to Collection
			            } else { // Else, if Sib is LastElement
			                collection.push(lastElement.attr('word')); // Add Last Element to Collection
			                return false; // Break Loop
			            }
			        });
			        return collection; // Return Collection
		    }
		    
		    $('body').mouseup(function(){
		    	if (window.getSelection) { // non-IE
		            userSelection = window.getSelection();
		            console.log(userSelection);
		            rangeObject = userSelection.getRangeAt(0);
		            let mergedText = "";
		            if (rangeObject.startContainer == rangeObject.endContainer) {
		            	let target = getWordForChild(rangeObject.startContainer.parentNode);
		            	mergedText = $(target).attr('word');
		            } else {
		            	mergedText = getAllBetween(
		                    rangeObject.startContainer.parentNode,
		                    rangeObject.endContainer.parentNode).join("");
		            }
		            // console.log(mergedText);
		            $(".top-box").text(mergedText + ": ...");
		            // let parentContainer = rangeObject.startContainer;
		            // while(!$(parentContainer).hasClass())
		            // $.get('/write?text=' +);
		            $.get('/translate', { from: 'ja', to: 'en', text: mergedText }, function(res){
		            	$(".top-box").text(mergedText + ": " + res);
		            });

		            let originalText = $(rangeObject.startContainer).closest(".text-chunk").attr('original');
		            if(!written[originalText]){
			            console.log(originalText);
			            written[originalText] = true;
			            $.get('/write?text=' + encodeURIComponent(originalText));
			        }
		        } else if (document.selection) { // IE lesser
		            userSelection = document.selection.createRange();
		            var ids = new Array();
		            
		            if (userSelection.htmlText.toLowerCase().indexOf('span') >= 0) {
		                $(userSelection.htmlText).filter('span').each(function(index, span) {
		                    ids.push($(span).attr('word'));
		                });
		                alert(ids);
		            } else {
		                alert($(userSelection.parentElement()).attr('word'));
		            }
		        }
		    });

		    let isMouseIn = false;
		    $(".top-box").css('max-width', Math.min($(window).width(), 600));
		    $(".top-box").mouseenter(() => {
		    	isMouseIn = true;
		    	console.log(isMouseIn);
		    });
		    $(".top-box").mouseleave(() => {
		    	isMouseIn = false;
		    	console.log(isMouseIn);
		    });

	        $(document).on("definition-changed", (e, def, xPosition, yPosition, node) => {
	        	$node = $(node);
	        	$defContainer = $(".top-box");

	        	if(def == ""){
	        		if(!isMouseIn) $defContainer.hide();
	        		return;
	        	} 

	        	let scrollY = window.scrollY;

	        	if (def == "en"){
	        		$defContainer.show();
	        		$defContainer.css("top", 0);
	        		$defContainer.css("left", 0);
	        		console.log(node);
	        		$defContainer.html($(node).attr("trans"));
	        		let width = $defContainer.width();
	      			let height = $defContainer.height();
	        		const pos = $(node).position();
	        		$defContainer.css("top", pos.top - height - 20);//$node.position().top - height);
	      			$defContainer.css("left", Math.min(pos.left + 16, $(window).width() - width - 32));
	        		return;
	        	}
	        	$defContainer.show();

	        	if($node.closest(".top-box")[0] == $(".top-box")[0]) return;

        		$defContainer.css("top", 0);
        		$defContainer.css("left", 0);
	      		$defContainer.html(def);
	      		let width = $defContainer.width();
	      		let height = $defContainer.height();
	      		$defContainer.css("top", yPosition - height - 20 + scrollY);//$node.position().top - height);
	      		$defContainer.css("left", Math.min(xPosition, $(window).width() - width - 32));

	        	window.scrollTo(0, scrollY);
	        });

	        $(document).mouseleave(function () {
			    $defContainer.hide();
			});

	        $("#container").css("min-height", ($(window).height() - 32) + 'px');

	        $("#options-button").click(() => {
	        	console.log('click');
	        	$.get('/options', (res) => {
	        		// console.log(res);
	        		$(document.body).append(res);
	        	});
	        });

	        $(document).on('options-changed', () => {
	        	console.log('options-changed');
	        	$(".text-chunk").each((index, element) => {
	        		console.log(window.langToolsConfig.showFurigana, element, $(element).attr('original'), $(element).attr('annotated'));
	        		if(!window.langToolsConfig.hideFurigana){
	        			$(element).find('.content').html(textToFurigana[$(element).attr('original')]);
	        		} else {
	        			$(element).find('.content').html($(element).attr('original'));
	        		}
	        	});
	        });

	        window.isMobile = mobileAndTabletcheck();

	        if(window.isMobile){
	        	$(document.body).on('click', '.translation-button', (e) => {
					$node = $(e.target);
		        	$defContainer = $(".top-box");
	        		$defContainer.show();
	        		$defContainer.css("top", 0);
	        		$defContainer.css("left", 0);
	        		$defContainer.html($node.attr("trans"));
	        		let width = $defContainer.width();
	      			let height = $defContainer.height();
	        		const pos = $node.position();
	        		$defContainer.css("top", pos.top - height - 20);//$node.position().top - height);
	      			$defContainer.css("left", Math.min(pos.left + 16, $(window).width() - width - 32));
	      			e.stopPropagation();
	        	});
	        }
		});
	</script>
</head>
<body>
	<div style="position:fixed; width:100%; top:0; left:0; background-color:white; padding:4px; text-align: right; box-shadow: 0 10px 16px 0 rgba(0,0,0,0.2),0 6px 16px 0 rgba(0,0,0,0.19);"><i id="options-button" class="fa fa-cog link-button" aria-hidden="true"></i></div>
	<div class="top-box no-dict">Hover over words to translate...</div>
    <div id="container" style="display:flex; align-items:flex-end; flex-direction:column">
    <!-- <div> -->
    	<div style="flex:2; display: flex;"></div>
		<div id="output"></div>
	</div>
</body>